name: L4CasADi CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
    - uses: actions/checkout@v3
    - name: Run mypy
      run: |
        pip install mypy
        mypy . --ignore-missing-imports --exclude examples
    - name: Run flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  tests:
    runs-on: ${{ matrix.runs-on }}
    needs: [ lint ]
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest, macos-latest, windows-latest]

    name: Tests on ${{ matrix.runs-on }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install Python
      uses: actions/setup-python@v4
      with:
        python-version: '>=3.9 <3.12'

    - name: Install L4CasADi
      run: |
        python -m pip install --upgrade pip
        pip install torch --index-url https://download.pytorch.org/whl/cpu  # Ensure CPU torch version
        pip install -r requirements_build.txt
        pip install . -v --no-build-isolation 

    - name: Test with pytest
      working-directory: ./tests
      run: |
        pip install pytest
        pytest .

  test-on-aarch:
    runs-on: ubuntu-latest
    needs: [ lint ]
    timeout-minutes: 60

    name: Tests on aarch64
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: uraimo/run-on-arch-action@v2
        name: Install and Test
        with:
          arch: aarch64
          distro: ubuntu20.04
          install: |
            apt-get update
            apt-get install -y --no-install-recommends python3.9 python3-pip python-is-python3
            pip install -U pip
            apt-get install -y build-essential

          run: |
            python -m pip install --upgrade pip
            pip install torch --index-url https://download.pytorch.org/whl/cpu  # Ensure CPU torch version
            pip install -r requirements_build.txt
            pip install . -v --no-build-isolation 
            # pip install pytest
            # pytest .
